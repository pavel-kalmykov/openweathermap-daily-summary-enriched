name: FastAPI Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Run ruff
      uses: chartboost/ruff-action@v1

    - name: Run ruff format
      uses: chartboost/ruff-action@v1
      with:
        args: 'format --check'


    - name: Install Poetry
      uses: abatilo/actions-poetry@v2

    - name: Define a cache for the virtual environment based on the dependencies lock file
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}

    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local

    - name: Install dependencies
      run: poetry install

    - name: Run tests
      env:
        API_KEY: ${{ secrets.API_KEY }}
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: weather_db
        APP_PORT: 8000
      run: poetry run pytest
